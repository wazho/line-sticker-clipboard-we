{"version":3,"sources":["StickerCollection.jsx","utils/image.jsx","SticketPicker.jsx","StickerSearcher.jsx","App.jsx","index.js"],"names":["StickerCollection","props","imageToBlob","imageURL","img","Image","c","document","createElement","ctx","getContext","crossOrigin","src","Promise","resolve","onload","width","this","naturalWidth","height","naturalHeight","console","log","drawImage","toBlob","blob","apiUrl","styledSticketPicker","styled","className","productId","stickerResourceType","useState","selectedType","setSelectType","visible","setVisible","stickers","setStickers","handleClose","useCallback","handleCopy","imageUrl","a","async","item","window","ClipboardItem","navigator","clipboard","write","notification","success","message","description","placement","useEffect","querystring","stringify","url","fetch","then","res","json","list","test","animatedStickers","map","replace","static","animation","title","footer","onCancel","Group","type","size","children","onClick","bind","gutter","sticker","i","key","xs","sm","md","lg","xl","shape","StickerSearcher","term","setTerm","products","setProducts","selectedProduct","setSelectedProduct","setStickerResourceType","handleOpenProduction","query","limit","items","Search","enterButton","defaultValue","onSearch","value","product","id","hoverable","cover","alt","listIcon","style","minWidth","Meta","authorName","tabs","myStickerCollection","searchMoreStickers","styledApp","tab","setTab","switchTab","Header","theme","mode","defaultSelectedKeys","lineHeight","onSelect","Item","Content","background","padding","margin","minHeight","Footer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0b3c95dd.chunk.js","sourcesContent":["// Local modules.\nimport React from 'react';\n// Styles.\nimport './App.css';\n\nfunction StickerCollection(props) {\n    return (\n        <>\n            {`功能製作中 ... 再等等哦！`}\n        </>\n    );\n}\n\nexport default StickerCollection;\n","export function imageToBlob(imageURL) {\n    const img = new Image();\n    const c = document.createElement('canvas');\n    const ctx = c.getContext('2d');\n    img.crossOrigin = '';\n    img.src = imageURL;\n\n    return new Promise(resolve => {\n        img.onload = function () {\n            c.width = this.naturalWidth;\n            c.height = this.naturalHeight;\n            console.log(this);\n            ctx.drawImage(this, 0, 0);\n            c.toBlob((blob) => {\n                // here the image is a blob\n                resolve(blob)\n            }, 'image/png', 0.75);\n        };\n    })\n}\n","// Node modules.\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { stringify } from 'query-string';\n// import copyToClipboard from 'clipboard-copy';\n// Styles.\nimport { Modal, Avatar, Row, Col, notification, Divider, Button } from 'antd';\nimport styled from 'styled-components';\n// Local modules.\nimport { imageToBlob } from './utils/image';\n\nconst apiUrl = `https://asia-east2-line-sticker-fetcher.cloudfunctions.net`;\n\nfunction SticketPicker(props) {\n    const { className, productId, stickerResourceType } = props;\n\n    const [selectedType, setSelectType] = useState('static');\n    const [visible, setVisible] = useState(false);\n    const [stickers, setStickers] = useState([]);\n\n    const handleClose = useCallback(() => {\n        setVisible(false);\n    }, []);\n\n    const handleCopy = useCallback(async (imageUrl) => {\n        // const text = `![](${imageUrl} =100x)`;\n        // copyToClipboard(text);\n        const blob = await imageToBlob(imageUrl)\n        const item = new window.ClipboardItem({ 'image/png': blob });\n        navigator.clipboard.write([item]);\n\n        notification.success({\n            message: `複製成功`,\n            description: `已經將語法複製到剪貼簿囉！`,\n            placement: 'bottomRight',\n        })\n    }, []);\n\n    useEffect(() => {\n        const querystring = stringify({\n            productId,\n        });\n        const url = `${apiUrl}/get-stickers?${querystring}`;\n\n        setStickers({});\n        fetch(url)\n            .then((res) => res.json())\n            .then((list) => {\n                if (/ANIMATION/.test(stickerResourceType)) {\n                    const animatedStickers = list.map((item) => item.replace('sticker.png', 'sticker_animation.png'));\n                    setStickers({ static: list, animation: animatedStickers });\n                } else {\n                    setStickers({ static: list });\n                }\n            });\n\n        // Show modal.\n        setVisible(!!productId);\n    }, [productId, stickerResourceType]);\n\n    return (\n        <Modal className={className} width={800}\n            visible={visible}\n            title={`選擇喜歡的貼圖`}\n            footer={null}\n            onCancel={handleClose}\n        >\n            <Button.Group>\n                {stickers.static &&\n                    <Button type={selectedType === 'static' ? 'primary' : 'default'} size='large'\n                        children={`靜態貼圖`}\n                        onClick={setSelectType.bind(null, 'static')}\n                    />\n                }\n                {stickers.animation &&\n                    <Button type={selectedType === 'animation' ? 'primary' : 'default'} size='large'\n                        children={`動態貼圖`}\n                        onClick={setSelectType.bind(null, 'animation')}\n                    />\n                }\n            </Button.Group>\n\n            <Divider />\n\n            <p>{`點擊將貼圖加入至蒐藏庫當中`}</p>\n\n            <Row gutter={[16, 16]}>\n                {stickers[selectedType] && stickers[selectedType].map((sticker, i) => (\n                    <Col key={i} xs={12} sm={8} md={6} lg={6} xl={6}\n                        onClick={handleCopy.bind(null, sticker)}\n                    >\n                        <Avatar className='sticker' shape='square' size={128} src={sticker} />\n                    </Col>\n                ))}\n            </Row>\n        </Modal>\n    );\n}\n\nconst styledSticketPicker = styled(SticketPicker)`\n    .sticker {\n        cursor: pointer;\n    }\n`;\n\nexport default styledSticketPicker;\n","// Local modules.\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { stringify } from 'query-string';\n// Styles.\nimport { Input, Card, Row, Col, Divider } from 'antd';\nimport './App.css';\n// Local modules.\nimport SticketPicker from './SticketPicker';\n\nconst apiUrl = `https://asia-east2-line-sticker-fetcher.cloudfunctions.net`;\n\nfunction StickerSearcher(props) {\n    const [term, setTerm] = useState('咖波');\n    const [products, setProducts] = useState([]);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [stickerResourceType, setStickerResourceType] = useState(null);\n\n    const handleOpenProduction = useCallback((productId, stickerResourceType) => {\n        setSelectedProduct(productId);\n        setStickerResourceType(stickerResourceType);\n    }, []);\n\n    useEffect(() => {\n        const querystring = stringify({\n            query: term,\n            limit: 50,\n        });\n        const url = `${apiUrl}/search-products?${querystring}`;\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((json) => setProducts(json.items));\n    }, [term]);\n\n    return (\n        <>\n            <Input.Search size='large'\n                enterButton={`搜尋貼圖`}\n                defaultValue={term}\n                onSearch={(value) => setTerm(value)}\n            />\n\n            <Divider />\n\n            <Row gutter={[16, 16]}>\n                {products.map((product) => (\n                    <Col key={product.id} xs={12} sm={8} md={6} lg={4} xl={3}>\n                        <Card hoverable size='small'\n                            cover={<img alt={product.title} src={product.listIcon.src} />}\n                            style={{ minWidth: 150 }}\n                            onClick={handleOpenProduction.bind(this, product.id, product.stickerResourceType)}\n                        >\n                            <Card.Meta title={product.title} description={product.authorName} />\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n\n            <SticketPicker productId={selectedProduct} stickerResourceType={stickerResourceType} />\n        </>\n    );\n}\n\nexport default StickerSearcher;\n","// Local modules.\nimport React, { useState, useCallback } from 'react';\n// Styles.\nimport { Layout, Menu } from 'antd';\nimport styled from 'styled-components';\nimport './App.css';\nimport StickerCollection from './StickerCollection';\nimport StickerSearcher from './StickerSearcher';\n\nconst tabs = {\n    myStickerCollection: '我的貼圖收藏庫',\n    searchMoreStickers: '搜尋其它貼圖',\n};\n\nfunction App(props) {\n    const { className } = props;\n\n    const [tab, setTab] = useState(tabs.myStickerCollection);\n\n    const switchTab = useCallback(({ key }) => {\n        setTab(key);\n    }, []);\n\n    return (\n        <div className={className}>\n            <Layout>\n                <Layout.Header className='top-menu'>\n                    <div className={`site-title`}\n                        children={`LINE 貼圖隨意貼`}\n                    />\n\n                    <Menu theme='dark' mode='horizontal'\n                        defaultSelectedKeys={tab}\n                        style={{ lineHeight: '64px' }}\n                        onSelect={switchTab}\n                    >\n                        <Menu.Item key={tabs.myStickerCollection}\n                            children={tabs.myStickerCollection}\n                        />\n                        <Menu.Item key={tabs.searchMoreStickers}\n                            children={tabs.searchMoreStickers}\n                        />\n                    </Menu>\n                </Layout.Header>\n\n                <Layout.Content\n                    style={{\n                        background: '#fff',\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280,\n                    }}\n                >\n                    {tab === tabs.myStickerCollection &&\n                        <StickerCollection />\n                    }\n\n                    {tab === tabs.searchMoreStickers &&\n                        <StickerSearcher />\n                    }\n                </Layout.Content>\n\n                <Layout.Footer>\n                    {`Design by Salmon (salmon.tw)`}\n                </Layout.Footer>\n            </Layout>\n        </div>\n    );\n}\n\nconst styledApp = styled(App)`\n    .top-menu * {\n        display: inline-block;\n\n        &.site-title {\n            color: #00c300;\n            font-size: 1.15em;\n            margin-right: 2em;\n        }\n    }\n`;\n\nexport default styledApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}